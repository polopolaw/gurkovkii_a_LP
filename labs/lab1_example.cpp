#include <iostream> //можно и так но не стоит #include "iostream", обычно это для старых библиотек которые достались от C так подключаются
#include <cmath> //библиотека содержащая различные математические функции например функцию квадратнойго корня sqrt(число из которого необходимо извлечь корень)
using namespace std; //указывает на область имен чтобы разработчики могли создавать разные библиотеки с одинаковым названием фукций и это не крашило программу так как компилятор не поймет какую именно функцию вы вызываете.
void main() {

	setlocale(LC_ALL, "Russian"); //удобная функция, настраивает консоль на вывод кирилических символов
	const double g = 9.8; //значение const обозначет что переменную нельзя больше менять, это вызовет исключение
	const double h = 78.4;
	double T, t, x;
	
	int n;
	cout << "Введите время: "; //вывести что-то в консоль, можно использовать конструкцию такого типа: cout << первое значение << еще что-то << "какая-то строка";
	cin >> t; //считывание из консоли в переменную 

	T = sqrt(2 * h / g);
	n = int(t / T); //строгое приведение типов так тут делятся число с запятой на число с запятой что скорее всего будет равно другому числу с запятой, чтобы вернуть целое число использется эта конструкция
	t = n % 2 ? T - (t - n * T) : t - n * T;
	x = h - g * t * t / 2;
	cout << x;
    //мы не писали return 0 т.к. у функции main тип возвращаемого значение void что зачит не возвращает ничего, обычно такое используется для функций которые обрабатывают какие-то данные но об этом позже.
}
